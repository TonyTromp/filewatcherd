#!/usr/bin/python3.6

import pyinotify
import configparser
import subprocess
from os import path

config = configparser.ConfigParser()
config.read('filewatcher.conf')
config.sections()

print("Watching Folder(s): ",config['config']['folders']);

def run_script(script,filename):
  if path.exists(script):
    subprocess.call([script,'-f',filename]) 
  else:
    print("Unable to open script:", script);

class EventHandler(pyinotify.ProcessEvent):
    def process_IN_CLOSE_WRITE(self, event):
        print("Closing Write:", event.pathname)
        run_script(config['event_handlers']['FILE_CLOSE_WRITE'], event.pathname)

    def process_IN_CREATE(self, event):
        print("Creating:", event.pathname)
        run_script(config['event_handlers']['FILE_CREATE'], event.pathname)

    def process_IN_DELETE(self, event):
        print("Removing:", event.pathname)
        run_script(config['event_handlers']['FILE_DELETE'], event.pathname)

wm = pyinotify.WatchManager()  # Watch Manager

handler = EventHandler()
notifier = pyinotify.Notifier(wm, handler)
wdd = wm.add_watch(config['config']['folders'], eval(config['config']['mask']), rec=True)

notifier.loop()

